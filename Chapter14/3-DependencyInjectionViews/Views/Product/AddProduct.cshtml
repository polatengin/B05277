@model ProductViewModel
@inject ICategoryDataStore Categories

<br />
<p>Let's add a new product</p>
@using (Html.BeginForm("AddProduct", "Product", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-6">
            @Html.ValidationSummary(false)
            <div class="form-group">
                @Html.LabelFor(x => x.Name, "Product Name")
                @Html.TextBoxFor(x => x.Name, 
new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Name)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Price, "Product Price")
                @Html.TextBoxFor(x => x.Price, 
new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Price)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.CategoryName, "Category")
                @Html.DropDownListFor(x => x.CategoryName,
Categories.GetCategories(), "Please select one category", 
new { @class = "form-control"})
            </div>
            <div>
                <input type="submit" value="Add" />
            </div>
        </div>
    </div>

@section scripts{
    <script src="~/lib/jquery-validation/dist/jquery.validate.js">
</script>
    <script src=
"~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js">
</script>
}
